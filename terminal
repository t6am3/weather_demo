# 1. 确保在正确的目录下
cd ~
rm -rf weather_api
mkdir weather_api
cd weather_api

# 2. 创建所有必要的文件
touch Dockerfile
touch requirements.txt
touch main.py
touch models.py
touch mock_data.py

# 3. 写入 requirements.txt
echo 'fastapi==0.104.1
uvicorn==0.24.0
gunicorn==21.2.0' > requirements.txt

# 4. 写入 Dockerfile
echo 'FROM python:3.9-slim

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

EXPOSE 80

CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "80"]' > Dockerfile

# 5. 构建并运行 Docker 镜像
docker build -t weather-api .
docker run -d -p 80:80 weather-api

# 使用 HTTPS 克隆一个新的仓库
git clone https://github.com/t6am3/weather_demo.git
cd weather_demo

# 复制所有文件到这个目录
cp ../weather_api/* .

# 然后添加并提交
git add .
git commit -m "Initial commit"
git push

# 创建 .gitignore
echo 'venv/
__pycache__/
*.pyc
.env
.DS_Store' > .gitignore

# 检查 git 状态
git status

# 确保添加所有文件
git add .

# 检查是否有文件被添加
git status

# 创建提交
git commit -m "Initial commit"

# 检查提交是否成功
git log

# 然后再推送
git push -u origin main

git branch  # 查看当前分支
git remote -v  # 查看远程仓库配置